import { ChatKittyPaginator } from './pagination';
import { ChatKittyFailedResult, ChatKittySucceededResult } from './result';
import { User } from './user';
export declare class UserBlockedRecord {
    user: User;
    createdTime: string;
    /** @internal */
    _actions: UserBlockedRecordActions;
}
declare class UserBlockedRecordActions {
    delete: string;
}
export declare type ListUserBlockedRecordsResult = ListUserBlockedRecordsSucceededResult | ChatKittyFailedResult;
export declare class ListUserBlockedRecordsSucceededResult extends ChatKittySucceededResult {
    paginator: ChatKittyPaginator<UserBlockedRecord>;
    constructor(paginator: ChatKittyPaginator<UserBlockedRecord>);
}
export declare class DeleteUserBlockedRecordRequest {
    item: UserBlockedRecord;
}
export declare type DeleteUserBlockedRecordResult = DeleteUserBlockedRecordSucceededResult | ChatKittyFailedResult;
export declare class DeleteUserBlockedRecordSucceededResult extends ChatKittySucceededResult {
    user: User;
    constructor(user: User);
}
export {};
