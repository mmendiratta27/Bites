import type { EventConsumer, EventEmitter } from './types';
<<<<<<< HEAD
export declare type NavigationEventEmitter<T extends Record<string, any>> = EventEmitter<T> & {
=======
export type NavigationEventEmitter<T extends Record<string, any>> = EventEmitter<T> & {
>>>>>>> b7d9a72a2deb36fa2a88334f678f5253599d69bf
    create: (target: string) => EventConsumer<T>;
};
/**
 * Hook to manage the event system used by the navigator to notify screens of various events.
 */
export default function useEventEmitter<T extends Record<string, any>>(listen?: (e: any) => void): NavigationEventEmitter<T>;
//# sourceMappingURL=useEventEmitter.d.ts.map